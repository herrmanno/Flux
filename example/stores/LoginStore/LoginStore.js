/// <reference path="../../../dist/flux.d.ts"/>
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var LoginStore = (function (_super) {
    __extends(LoginStore, _super);
    function LoginStore() {
        _super.apply(this, arguments);
    }
    LoginStore.prototype.init = function () {
        this.data = {};
    };
    LoginStore.prototype.login = function (user) {
        if (user.name === this.data.name && user.password === this.data.password)
            return;
        var found = JSON.parse(localStorage['users'] || '[]')
            .filter(function (u) {
            return u.name === user.name && u.password === user.password;
        })[0];
        if (found) {
            this.data = found;
            ho.flux.DISPATCHER.dispatch({ type: LoginStore.actions.LOGIN_SUCCES });
        }
        else {
            this.data = { error: "Username or Password is wrong!" };
            ho.flux.DISPATCHER.dispatch({ type: LoginStore.actions.LOGIN_ERROR });
        }
        this.changed();
        this.changed();
    };
    LoginStore.prototype.isLoggedIn = function () {
        return !!this.data.name;
    };
    LoginStore.actions = {
        LOGIN_SUCCES: 'LOGIN_SUCCES',
        LOGIN_ERROR: 'LOGIN_ERROR'
    };
    return LoginStore;
})(ho.flux.Store);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTG9naW5TdG9yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkxvZ2luU3RvcmUudHMiXSwibmFtZXMiOlsiTG9naW5TdG9yZSIsIkxvZ2luU3RvcmUuY29uc3RydWN0b3IiLCJMb2dpblN0b3JlLmluaXQiLCJMb2dpblN0b3JlLmxvZ2luIiwiTG9naW5TdG9yZS5pc0xvZ2dlZEluIl0sIm1hcHBpbmdzIjoiQUFBQSwrQ0FBK0M7Ozs7OztBQU0vQztJQUF5QkEsOEJBQTZCQTtJQUF0REE7UUFBeUJDLDhCQUE2QkE7SUF3Q3REQSxDQUFDQTtJQWhDQUQseUJBQUlBLEdBQUpBO1FBQ0NFLElBQUlBLENBQUNBLElBQUlBLEdBQW1CQSxFQUFFQSxDQUFDQTtJQUNoQ0EsQ0FBQ0E7SUFFREYsMEJBQUtBLEdBQUxBLFVBQU1BLElBQVdBO1FBQ2hCRyxFQUFFQSxDQUFBQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxLQUFLQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxJQUFJQSxJQUFJQSxDQUFDQSxRQUFRQSxLQUFLQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxRQUFRQSxDQUFDQTtZQUN2RUEsTUFBTUEsQ0FBQ0E7UUFFUkEsSUFBSUEsS0FBS0EsR0FBR0EsSUFBSUEsQ0FBQ0EsS0FBS0EsQ0FBQ0EsWUFBWUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsSUFBSUEsSUFBSUEsQ0FBQ0E7YUFDcERBLE1BQU1BLENBQUNBLFVBQUNBLENBQUNBO1lBQ1RBLE1BQU1BLENBQUNBLENBQUNBLENBQUNBLElBQUlBLEtBQUtBLElBQUlBLENBQUNBLElBQUlBLElBQUlBLENBQUNBLENBQUNBLFFBQVFBLEtBQUtBLElBQUlBLENBQUNBLFFBQVFBLENBQUNBO1FBQzdEQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQSxDQUFDQTtRQUVOQSxFQUFFQSxDQUFBQSxDQUFDQSxLQUFLQSxDQUFDQSxDQUFDQSxDQUFDQTtZQUNWQSxJQUFJQSxDQUFDQSxJQUFJQSxHQUFHQSxLQUFLQSxDQUFDQTtZQUNsQkEsRUFBRUEsQ0FBQ0EsSUFBSUEsQ0FBQ0EsVUFBVUEsQ0FBQ0EsUUFBUUEsQ0FBQ0EsRUFBQ0EsSUFBSUEsRUFBRUEsVUFBVUEsQ0FBQ0EsT0FBT0EsQ0FBQ0EsWUFBWUEsRUFBQ0EsQ0FBQ0EsQ0FBQ0E7UUFDdEVBLENBQUNBO1FBQUNBLElBQUlBLENBQUNBLENBQUNBO1lBQ1BBLElBQUlBLENBQUNBLElBQUlBLEdBQW1CQSxFQUFDQSxLQUFLQSxFQUFFQSxnQ0FBZ0NBLEVBQUNBLENBQUNBO1lBQ3RFQSxFQUFFQSxDQUFDQSxJQUFJQSxDQUFDQSxVQUFVQSxDQUFDQSxRQUFRQSxDQUFDQSxFQUFDQSxJQUFJQSxFQUFFQSxVQUFVQSxDQUFDQSxPQUFPQSxDQUFDQSxXQUFXQSxFQUFDQSxDQUFDQSxDQUFDQTtRQUNyRUEsQ0FBQ0E7UUFDREEsSUFBSUEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7UUFFZkEsSUFBSUEsQ0FBQ0EsT0FBT0EsRUFBRUEsQ0FBQ0E7SUFFaEJBLENBQUNBO0lBRURILCtCQUFVQSxHQUFWQTtRQUNDSSxNQUFNQSxDQUFDQSxDQUFDQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQSxJQUFJQSxDQUFDQTtJQUN6QkEsQ0FBQ0E7SUFsQ01KLGtCQUFPQSxHQUFHQTtRQUNoQkEsWUFBWUEsRUFBRUEsY0FBY0E7UUFDNUJBLFdBQVdBLEVBQUVBLGFBQWFBO0tBQzFCQSxDQUFBQTtJQW1DRkEsaUJBQUNBO0FBQURBLENBQUNBLEFBeENELEVBQXlCLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQXdDckMiLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vLi4vZGlzdC9mbHV4LmQudHNcIi8+XG5cbmludGVyZmFjZSBMb2dpblN0b3JlRGF0YSBleHRlbmRzIElVc2VyIHtcblx0ZXJyb3I6IHN0cmluZztcbn1cblxuY2xhc3MgTG9naW5TdG9yZSBleHRlbmRzIGhvLmZsdXguU3RvcmU8TG9naW5TdG9yZURhdGE+IHtcblxuXHRzdGF0aWMgYWN0aW9ucyA9IHtcblx0XHRMT0dJTl9TVUNDRVM6ICdMT0dJTl9TVUNDRVMnLFxuXHRcdExPR0lOX0VSUk9SOiAnTE9HSU5fRVJST1InXG5cdH1cblxuXG5cdGluaXQoKSB7XG5cdFx0dGhpcy5kYXRhID0gPExvZ2luU3RvcmVEYXRhPnt9O1xuXHR9XG5cblx0bG9naW4odXNlcjogSVVzZXIpOiB2b2lkIHtcblx0XHRpZih1c2VyLm5hbWUgPT09IHRoaXMuZGF0YS5uYW1lICYmIHVzZXIucGFzc3dvcmQgPT09IHRoaXMuZGF0YS5wYXNzd29yZClcblx0XHRcdHJldHVybjtcblxuXHRcdGxldCBmb3VuZCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlWyd1c2VycyddIHx8ICdbXScpXG5cdFx0LmZpbHRlcigodSkgPT4ge1xuXHRcdFx0cmV0dXJuIHUubmFtZSA9PT0gdXNlci5uYW1lICYmIHUucGFzc3dvcmQgPT09IHVzZXIucGFzc3dvcmQ7XG5cdFx0fSlbMF07XG5cblx0XHRpZihmb3VuZCkge1xuXHRcdFx0dGhpcy5kYXRhID0gZm91bmQ7XG5cdFx0XHRoby5mbHV4LkRJU1BBVENIRVIuZGlzcGF0Y2goe3R5cGU6IExvZ2luU3RvcmUuYWN0aW9ucy5MT0dJTl9TVUNDRVN9KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5kYXRhID0gPExvZ2luU3RvcmVEYXRhPntlcnJvcjogXCJVc2VybmFtZSBvciBQYXNzd29yZCBpcyB3cm9uZyFcIn07XG5cdFx0XHRoby5mbHV4LkRJU1BBVENIRVIuZGlzcGF0Y2goe3R5cGU6IExvZ2luU3RvcmUuYWN0aW9ucy5MT0dJTl9FUlJPUn0pO1xuXHRcdH1cblx0XHR0aGlzLmNoYW5nZWQoKTtcblxuXHRcdHRoaXMuY2hhbmdlZCgpO1xuXG5cdH1cblxuXHRpc0xvZ2dlZEluKCk6IGJvb2xlYW4ge1xuXHRcdHJldHVybiAhIXRoaXMuZGF0YS5uYW1lO1xuXHR9XG5cblxuXG59XG4iXX0=